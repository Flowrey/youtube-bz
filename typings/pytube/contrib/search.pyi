"""
This type stub file was generated by pyright.
"""

"""Module for interacting with YouTube search."""
logger = ...

class Search:
    def __init__(self, query) -> None:
        """Initialize Search object.

        :param str query:
            Search query provided by the user.
        """
        ...
    @property
    def completion_suggestions(self):  # -> Any | None:
        """Return query autocompletion suggestions for the query.

        :rtype: list
        :returns:
            A list of autocomplete suggestions provided by YouTube for the query.
        """
        ...
    @property
    def results(self):  # -> list[Unknown] | None:
        """Return search results.

        On first call, will generate and return the first set of results.
        Additional results can be generated using ``.get_next_results()``.

        :rtype: list
        :returns:
            A list of YouTube objects.
        """
        ...
    def get_next_results(self):  # -> None:
        """Use the stored continuation string to fetch the next set of results.

        This method does not return the results, but instead updates the results property.
        """
        ...
    def fetch_and_parse(
        self, continuation=...
    ):  # -> tuple[list[Unknown] | None, Any | None]:
        """Fetch from the innertube API and parse the results.

        :param str continuation:
            Continuation string for fetching results.
        :rtype: tuple
        :returns:
            A tuple of a list of YouTube objects and a continuation string.
        """
        ...
    def fetch_query(self, continuation=...):  # -> Any:
        """Fetch raw results from the innertube API.

        :param str continuation:
            Continuation string for fetching results.
        :rtype: dict
        :returns:
            The raw json object returned by the innertube API.
        """
        ...
