"""
This type stub file was generated by pyright.
"""

from typing import Dict, Optional
from pytube import Playlist

"""Module for interacting with a user's youtube channel."""
logger = ...
class Channel(Playlist):
    def __init__(self, url: str, proxies: Optional[Dict[str, str]] = ...) -> None:
        """Construct a :class:`Channel <Channel>`.

        :param str url:
            A valid YouTube channel URL.
        :param proxies:
            (Optional) A dictionary of proxies to use for web requests.
        """
        ...
    
    @property
    def channel_name(self): # -> str:
        """Get the name of the YouTube channel.

        :rtype: str
        """
        ...
    
    @property
    def channel_id(self): # -> str:
        """Get the ID of the YouTube channel.

        This will return the underlying ID, not the vanity URL.

        :rtype: str
        """
        ...
    
    @property
    def vanity_url(self):
        """Get the vanity URL of the YouTube channel.

        Returns None if it doesn't exist.

        :rtype: str
        """
        ...
    
    @property
    def html(self): # -> _UrlopenRet:
        """Get the html for the /videos page.

        :rtype: str
        """
        ...
    
    @property
    def playlists_html(self): # -> _UrlopenRet:
        """Get the html for the /playlists page.

        Currently unused for any functionality.

        :rtype: str
        """
        ...
    
    @property
    def community_html(self): # -> _UrlopenRet:
        """Get the html for the /community page.

        Currently unused for any functionality.

        :rtype: str
        """
        ...
    
    @property
    def featured_channels_html(self): # -> _UrlopenRet:
        """Get the html for the /channels page.

        Currently unused for any functionality.

        :rtype: str
        """
        ...
    
    @property
    def about_html(self): # -> _UrlopenRet:
        """Get the html for the /about page.

        Currently unused for any functionality.

        :rtype: str
        """
        ...
    


